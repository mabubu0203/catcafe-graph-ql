buildscript {
    ext {
        // ソースと実行ファイルのJavaバージョン
        JdkVersion = jdkVersion
        DefaultEncoding = defaultEncoding

        // SpringBoot
        SpringBootVersion = springbootVersion

        // CatCafe
        CafeVersion = cafeVersion
    }

    repositories {
        mavenCentral()
        if (SpringBootVersion.contains('-')) {
            maven { url "https://repo.spring.io/milestone" }
        }
        if (SpringBootVersion.endsWith('-SNAPSHOT')) {
            maven { url "https://repo.spring.io/snapshot" }
        }
    }

}

plugins {
	id 'org.springframework.boot' version "${SpringBootVersion}"
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.github.node-gradle.node' version '3.1.1' apply false
    id 'com.netflix.dgs.codegen' version '5.1.16' apply false
	id 'com.palantir.git-version' version '0.12.3'
    id 'com.gorylenko.gradle-git-properties' version '2.3.2'
	id 'se.bjurr.gitchangelog.git-changelog-gradle-plugin' version '1.71.5'
}

description = "root"

subprojects {

    group = 'mabubu0203.com.github'
    version = "${CafeVersion}"
    apply from: "$rootDir/gradle/java.gradle"
    apply from: "$rootDir/gradle/spring.gradle"

    configurations {
        compileOnly.extendsFrom annotationProcessor
    }

    repositories {
        mavenCentral()
        if (SpringBootVersion.contains('-')) {
            maven { url "https://repo.spring.io/milestone" }
        }
        if (SpringBootVersion.endsWith('-SNAPSHOT')) {
            maven { url "https://repo.spring.io/snapshot" }
        }
    }

}

project(":micro-api") {
    dependencies {
        implementation(project(":micro-common"))
        implementation(project(":micro-infrastructure"))
    }
}

project(":micro-common") {
}

project(":micro-domain") {
    dependencies {
        implementation(project(":micro-common"))
    }
}

project(":micro-infrastructure") {
    dependencies {
        implementation(project(":micro-common"))
        api(project(":micro-domain"))
    }
}
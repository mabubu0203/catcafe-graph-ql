version: '3.8'

services:

  elasticsearch:
    build: ./docker-elastic
    container_name: docker-elastic
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "./docker-elastic/data/:/usr/share/elasticsearch/data"
    restart: always
    networks:
      - app-net

  kibana:
    build: ./docker-kibana
    container_name: docker-kibana
    ports:
      - "5601:5601"
    links:
      - elasticsearch
    restart: always
    networks:
      - app-net

  mysql:
    build: ./docker-mysql
    container_name: docker-mysql
    ports:
      - "3306:3306"
    volumes:
      - "./docker-mysql/init:/docker-entrypoint-initdb.d"
      - "./docker-mysql/conf/:/etc/mysql/conf.d"
      - "./docker-mysql/data/:/var/lib/mysql"
    env_file: "./docker-mysql/mysql.env"
    environment:
      TZ: "Asia/Tokyo"
    restart: always
    networks:
      - app-net

  phpmyadmin:
    build: ./docker-phpmyadmin
    container_name: docker-phpmyadmin
    links:
      - mysql:mysql
    ports:
      - "8021:80"
    volumes:
      - "./docker-phpmyadmin/sessions:/sessions"
    environment:
      PMA_ARBITRARY: "1"
      PMA_HOST: "mysql"
      PMA_USER: "root"
      PMA_PASSWORD: "root"
    restart: always
    networks:
      - app-net

  redis:
    build: ./docker-redis
    container_name: docker-redis
    ports:
      - "6379:6379"
    volumes:
      - "./docker-redis/data/:/data"
    hostname: redis
    restart: always
    networks:
      - app-net

  redisinsight:
    build: ./docker-redisinsight
    container_name: docker-redisinsight
    ports:
      - "8001:8001"
    volumes:
      - "./docker-redisinsight/data:/db"
    restart: always
    networks:
      - app-net

networks:
  app-net:
    driver: bridge